legend.key = element_rect(fill = "white")) +
guides(fill = guide_colourbar(barwidth = 25, barheight = 3,title="")) +
theme(axis.title.y= element_text(size=24, face="bold")) +
theme(axis.title.x= element_text(size=24, face="bold")) +
scale_x_continuous(breaks  = seq(1890,2020, by=10))
mean.p <- mean(clim.stack[clim.stack$variable %in% "precip","value"])
wet.stripes <- data.frame(Year=unique(clim.stack$Year),
precip = clim.stack[clim.stack$variable %in% "precip","value"],
mean.p = mean.p)
head(wet.stripes)
wet.stripes$diff <- wet.stripes$precip - mean.p
summary(wet.stripes)
wet <- ggplot(data=wet.stripes) +
geom_tile(aes(x=Year, y=1, fill=diff, group=Year), stat="identity") +
scale_fill_gradient2(low="chocolate4", mid="white", high="forestgreen") +
labs(x="Year", y="", fill="", title="NEUS Mean GS Precip") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank(),
axis.text.x=element_text(angle=0, color="black", size=16, vjust= 0.5, face="bold"),
axis.text.y=element_blank(),
strip.text=element_text(face="bold", size=22),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position="top",
legend.key.size = unit(0.75, "cm"),
legend.text = element_text(size=22),
legend.title = element_text(size=22),
legend.key = element_rect(fill = "white")) +
guides(fill = guide_colourbar(barwidth = 25, barheight = 3,title="")) +
theme(axis.title.y= element_text(size=24, face="bold")) +
theme(axis.title.x= element_text(size=24, face="bold")) +
scale_x_continuous(breaks  = seq(1890,2020, by=10))
library(cowplot)
plot_grid(warm,wet,align = c("v","h"), nrow = 2)
wet <- ggplot(data=wet.stripes) +
geom_tile(aes(x=Year, y=1, fill=diff, group=Year), stat="identity") +
scale_fill_gradient2(low="chocolate4", mid="white", high="forestgreen") +
labs(x="Year", y="", fill="", title="NEUS Mean GS Precip", caption = "PRISM data") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank(),
axis.text.x=element_text(angle=0, color="black", size=16, vjust= 0.5, face="bold"),
axis.text.y=element_blank(),
strip.text=element_text(face="bold", size=22),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position="top",
legend.key.size = unit(0.75, "cm"),
legend.text = element_text(size=22),
legend.title = element_text(size=22),
legend.key = element_rect(fill = "white")) +
guides(fill = guide_colourbar(barwidth = 25, barheight = 3,title="")) +
theme(axis.title.y= element_text(size=24, face="bold")) +
theme(axis.title.x= element_text(size=24, face="bold")) +
scale_x_continuous(breaks  = seq(1890,2020, by=10))
plot_grid(warm,wet,align = c("v","h"), nrow = 2)
warm <- ggplot(data=warm.stripes) +
geom_tile(aes(x=Year, y=1, fill=diff, group=Year), stat="identity") +
scale_fill_gradient2(low="dodgerblue3", mid="white", high="darkred", limits=c(-1.5,1.5), breaks=c(-1.5,-1,-0.5,0,0.5,1,1.5)) +
labs(x="Year", y="", fill="", title="NEUS Mean GS Temp") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank(),
axis.text.x=element_text(angle=0, color="black", size=16, vjust= 0.5, face="bold"),
axis.text.y=element_blank(),
strip.text=element_text(face="bold", size=22),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position="top",
legend.key.size = unit(0.75, "cm"),
legend.text = element_text(size=22),
legend.title = element_text(size=22),
legend.key = element_rect(fill = "white")) +
guides(fill = guide_colourbar(barwidth = 15, barheight = 3,title="")) +
theme(axis.title.y= element_text(size=24, face="bold")) +
theme(axis.title.x= element_text(size=24, face="bold")) +
scale_x_continuous(breaks  = seq(1890,2020, by=10))
wet <- ggplot(data=wet.stripes) +
geom_tile(aes(x=Year, y=1, fill=diff, group=Year), stat="identity") +
scale_fill_gradient2(low="chocolate4", mid="white", high="forestgreen") +
labs(x="Year", y="", fill="", title="NEUS Mean GS Precip", caption = "PRISM data") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank(),
axis.text.x=element_text(angle=0, color="black", size=16, vjust= 0.5, face="bold"),
axis.text.y=element_blank(),
strip.text=element_text(face="bold", size=22),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position="top",
legend.key.size = unit(0.75, "cm"),
legend.text = element_text(size=22),
legend.title = element_text(size=22),
legend.key = element_rect(fill = "white")) +
guides(fill = guide_colourbar(barwidth = 15, barheight = 3,title="")) +
theme(axis.title.y= element_text(size=24, face="bold")) +
theme(axis.title.x= element_text(size=24, face="bold")) +
scale_x_continuous(breaks  = seq(1890,2020, by=10))
plot_grid(warm,wet,align = c("v","h"), nrow = 2)
warm <- ggplot(data=warm.stripes) +
geom_tile(aes(x=Year, y=1, fill=diff, group=Year), stat="identity") +
scale_fill_gradient2(low="dodgerblue3", mid="white", high="darkred", limits=c(-1.5,1.5), breaks=c(-1.5,-1,-0.5,0,0.5,1,1.5)) +
labs(x="Year", y="", fill="", title="NEUS Mean GS Temp") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank(),
axis.text.x=element_text(angle=0, color="black", size=16, vjust= 0.5, face="bold"),
axis.text.y=element_blank(),
strip.text=element_text(face="bold", size=22),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position="top",
legend.key.size = unit(0.75, "cm"),
legend.text = element_text(size=18),
legend.title = element_text(size=22),
legend.key = element_rect(fill = "white")) +
guides(fill = guide_colourbar(barwidth = 15, barheight = 3,title="")) +
theme(axis.title.y= element_text(size=24, face="bold")) +
theme(axis.title.x= element_text(size=24, face="bold")) +
scale_x_continuous(breaks  = seq(1890,2020, by=10))
mean.p <- mean(clim.stack[clim.stack$variable %in% "precip","value"])
wet.stripes <- data.frame(Year=unique(clim.stack$Year),
precip = clim.stack[clim.stack$variable %in% "precip","value"],
mean.p = mean.p)
head(wet.stripes)
wet.stripes$diff <- wet.stripes$precip - mean.p
summary(wet.stripes)
wet <- ggplot(data=wet.stripes) +
geom_tile(aes(x=Year, y=1, fill=diff, group=Year), stat="identity") +
scale_fill_gradient2(low="chocolate4", mid="white", high="forestgreen") +
labs(x="Year", y="", fill="", title="NEUS Mean GS Precip", caption = "PRISM data") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank(),
axis.text.x=element_text(angle=0, color="black", size=16, vjust= 0.5, face="bold"),
axis.text.y=element_blank(),
strip.text=element_text(face="bold", size=22),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position="top",
legend.key.size = unit(0.75, "cm"),
legend.text = element_text(size=18),
legend.title = element_text(size=22),
legend.key = element_rect(fill = "white")) +
guides(fill = guide_colourbar(barwidth = 15, barheight = 3,title="")) +
theme(axis.title.y= element_text(size=24, face="bold")) +
theme(axis.title.x= element_text(size=24, face="bold")) +
scale_x_continuous(breaks  = seq(1890,2020, by=10))
library(cowplot)
plot_grid(warm,wet,align = c("v","h"), nrow = 2)
png("figures/climate_deviations.png", height=15, width=30, res=300, unit="in")
plot_grid(warm,wet,align = c("v","h"), nrow = 2)
dev.off()
summary(clim.stack)
vpd.stripes <- data.frame(Year=unique(clim.stack$Year),
precip = clim.stack[clim.stack$variable %in% "vpd.max","value"],
mean.p = mean.p)
head(vpd.stripes)
vpd.stripes <- data.frame(Year=unique(clim.stack$Year),
vpd.max = clim.stack[clim.stack$variable %in% "vpd.max","value"],
mean.vpd.max = mean.vpd.max)
mean.vpd.max <- mean(clim.stack[clim.stack$variable %in% "vpd.max","value"])
vpd.stripes <- data.frame(Year=unique(clim.stack$Year),
vpd.max = clim.stack[clim.stack$variable %in% "vpd.max","value"],
mean.vpd.max = mean.vpd.max)
head(vpd.stripes)
vpd.stripes$diff <- vpd.stripes$vpd.max - mean.vpd.max
summary(vpd.stripes)
ggplot(data=vpd.stripes) +
geom_tile(aes(x=Year, y=1, fill=diff, group=Year), stat="identity") +
scale_fill_gradient2(low="chocolate4", mid="white", high="forestgreen") +
labs(x="Year", y="", fill="", title="NEUS Mean GS VPDmax", caption = "PRISM data") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank(),
axis.text.x=element_text(angle=0, color="black", size=16, vjust= 0.5, face="bold"),
axis.text.y=element_blank(),
strip.text=element_text(face="bold", size=22),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position="top",
legend.key.size = unit(0.75, "cm"),
legend.text = element_text(size=18),
legend.title = element_text(size=22),
legend.key = element_rect(fill = "white")) +
guides(fill = guide_colourbar(barwidth = 15, barheight = 3,title="")) +
theme(axis.title.y= element_text(size=24, face="bold")) +
theme(axis.title.x= element_text(size=24, face="bold")) +
scale_x_continuous(breaks  = seq(1890,2020, by=10))
cor(clim.stack[clim.stack$variable %in% "vpd.max","value"],clim.stack[clim.stack$variable %in% "precip","value"])
cor(clim.stack[clim.stack$variable %in% "vpd.max","value"],clim.stack[clim.stack$variable %in% "tmean","value"])
vpd <- ggplot(data=vpd.stripes) +
geom_tile(aes(x=Year, y=1, fill=diff, group=Year), stat="identity") +
#scale_fill_gradient2(low="chocolate4", mid="white", high="forestgreen") +
labs(x="Year", y="", fill="", title="NEUS Mean GS VPDmax", caption = "PRISM data") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank(),
axis.text.x=element_text(angle=0, color="black", size=16, vjust= 0.5, face="bold"),
axis.text.y=element_blank(),
strip.text=element_text(face="bold", size=22),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position="top",
legend.key.size = unit(0.75, "cm"),
legend.text = element_text(size=18),
legend.title = element_text(size=22),
legend.key = element_rect(fill = "white")) +
guides(fill = guide_colourbar(barwidth = 15, barheight = 3,title="")) +
theme(axis.title.y= element_text(size=24, face="bold")) +
theme(axis.title.x= element_text(size=24, face="bold")) +
scale_x_continuous(breaks  = seq(1890,2020, by=10))
vpd
vpd <- ggplot(data=vpd.stripes) +
geom_tile(aes(x=Year, y=1, fill=diff, group=Year), stat="identity") +
scale_fill_gradient2(low="orchid", mid="white", high="goldenrod") +
labs(x="Year", y="", fill="", title="NEUS Mean GS VPDmax", caption = "PRISM data") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank(),
axis.text.x=element_text(angle=0, color="black", size=16, vjust= 0.5, face="bold"),
axis.text.y=element_blank(),
strip.text=element_text(face="bold", size=22),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position="top",
legend.key.size = unit(0.75, "cm"),
legend.text = element_text(size=18),
legend.title = element_text(size=22),
legend.key = element_rect(fill = "white")) +
guides(fill = guide_colourbar(barwidth = 15, barheight = 3,title="")) +
theme(axis.title.y= element_text(size=24, face="bold")) +
theme(axis.title.x= element_text(size=24, face="bold")) +
scale_x_continuous(breaks  = seq(1890,2020, by=10))
vpd
plot_grid(warm,wet,vpd,align = c("v","h"), nrow = 2)
png("figures/climate_deviations.png", height=15, width=30, res=300, unit="in")
plot_grid(warm,wet,vpd,align = c("v","h"), nrow = 3)
dev.off()
vpd <- ggplot(data=vpd.stripes) +
geom_tile(aes(x=Year, y=1, fill=diff, group=Year), stat="identity") +
scale_fill_gradient2(low="goldenrod", mid="white", high="orchid") +
labs(x="Year", y="", fill="", title="NEUS Mean GS VPDmax", caption = "PRISM data") +
theme(axis.line=element_line(color="black"),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.border=element_blank(),
panel.background=element_blank(),
axis.text.x=element_text(angle=0, color="black", size=16, vjust= 0.5, face="bold"),
axis.text.y=element_blank(),
strip.text=element_text(face="bold", size=22),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position="top",
legend.key.size = unit(0.75, "cm"),
legend.text = element_text(size=18),
legend.title = element_text(size=22),
legend.key = element_rect(fill = "white")) +
guides(fill = guide_colourbar(barwidth = 15, barheight = 3,title="")) +
theme(axis.title.y= element_text(size=24, face="bold")) +
theme(axis.title.x= element_text(size=24, face="bold")) +
scale_x_continuous(breaks  = seq(1890,2020, by=10))
png("figures/climate_deviations.png", height=15, width=30, res=300, unit="in")
plot_grid(warm,wet,vpd,align = c("v","h"), nrow = 3)
dev.off()
# SKIP TO LINE 36 FOR DATA INPUT.
library(mgcv)
library(ggplot2)
library(car)
# Christy's GAMM code
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data)
# Loading in my data
# ne.data <- read.csv("processed_data/NESites_tree_plus_climate_and_BA.csv", header=T)
# ne.data$Live.Dead <- recode(ne.data$Live.Dead, "'Li'='LIVE'")
# summary(ne.data)
# ne.data2 <- ne.data[,c("Year", "Site.Code", "TreeID", "RW", "Species", "Canopy.Class", "Live.Dead", "DBH", "dbh.recon", "tmean", "precip", "BA", "BA.inc", "Plot")]
# names(ne.data2) <- c("Year", "Site.Code", "TreeID", "RW", "Species", "Canopy.Class", "Live.Dead", "DBH", "dbh.recon", "tmean", "precip", "BA", "BA.inc", "PlotID")
#
# phd.data <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)
# summary(phd.data)
#
# ne.phd.data <- phd.data[phd.data$Site %in% c("Howland", "Harvard"),]
# ne.phd.data$DBH <- ne.phd.data$DBH..cm.
# ne.phd.data$Canopy.Class <- recode(ne.phd.data$Canopy.Class, "'S' = 'U'")
# ne.phd.data$Site.Code <- recode(ne.phd.data$Site, "'Howland'='HO';'Harvard'='HF'")
#
# ne.phd.data2 <- ne.phd.data[,c("Year", "Site.Code", "TreeID", "RW", "Species", "Canopy.Class", "Live.Dead", "DBH", "dbh.recon", "tmean", "precip", "BA", "BA.inc", "PlotID")]
#
# names(ne.data2)
# names(ne.phd.data2)
#
# data.use <- rbind(ne.data2, ne.phd.data2)
# summary(data.use)
# save(data.use, file="processed_data/gam_input_dataset.Rdata")
# Removing the huge BA.inc value tree.  I'm not sure what is happening there.  Ask Christy to take a look
# data.use <- data.use[!data.use$BA.inc > 140,]
# Loading in data.use
# Was merged in script #7 to facilitate VPD data
data.use <- read.csv("processed_data/NESites_tree_plus_climate_and_BA.csv", header=T)
# CR 4 Feb 2018 -- Rather than remove this value, lets just make it NA
# data.use[data.use$BA.inc > 140 & !is.na(data.use$BA.inc),]
data.use[!is.na(data.use$BA.inc) & data.use$BA.inc > 140, "BA.inc"] <- NA
summary(data.use)
# data.use$group <- data.use$Species
# data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA';
#                          'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")
#
# data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))
# data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'Canopy'; 'D'='Canopy'")
# summary(data.use)
# trimming down the data used to be only living trees, and not any goofs or snags
data.use <- data.use[data.use$Live.Dead=="LIVE" & !is.na(data.use$Live.Dead) & !data.use$Canopy.Class=="F" & !is.na(data.use$Canopy.Class),]
summary(data.use)
# reducing the amount of data for the test runs
# sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")
# test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]
test <- data.use[!is.na(data.use$RW) & !is.na(data.use$BA.inc),]
summary(test)
test$spp.cc <- as.factor(paste(test$Species, test$Canopy.Class, sep="."))
test$spp.plot <- as.factor(paste(test$Species, test$PlotID, sep="."))
summary(test)
# Get a list of what predictors & responses I'm using
predictors.all <- c("vpd.min", "vpd.max", "tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "Site.Code", "Year", "PlotID", "spp.cc")
# Getting rid of observations that have NAs in the important variables
test <- test[complete.cases(test[,predictors.all]),]
# test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]
summary(test)
# Subsetting to a set of species that we have enough data to feel good about
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")
# spp.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU", "PCRU", "THOC", "LITU", "JUVI")
# Looking at select major species for these sites
spp.use <- c("TSCA", "ACRU", "QURU", "FAGR")
test <- test[test$Species %in% spp.use,]
summary(test)
# par(new=F)
# plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")
test$log.dbh <- log(test$dbh.recon)
summary(test)
summary(test)
summary(test$Live.Dead)
summary(test$Canopy.Class)
# RW <- test$RW
# temp <- test$tmean
# precip <- test$precip
# canopy <- test$Canopy.Class
# size <- test$DBH..cm.
# species <- unique(test$Species)
# library(ggplot2)
# ggplot(data=test) +
# facet_wrap(~PlotID) +
# geom_histogram(aes(x=dbh.recon))
# ggplot(data=test) +
# facet_wrap(~Species) +
# geom_histogram(aes(x=dbh.recon))
# hist(test$dbh.recon)
# test2 <- test[test$group %in% c("QURU", "ACRU") & test$Year>=1980,]
# test2 <- test[test$group %in% c("QURU", "ACRU"),]
# test2 <- test[test$Site %in% c("Morgan Monroe State Park", "Harvard"), ]
# test2$log.dbh <- log(test2$dbh.recon)
# summary(test2)
summary(test)
test[test$BA.inc==0, "BA.inc"] <- 1e-6
save(test, file="overstory_understory_combined_data_use.Rdata")
# test.gam3 <- test
# test.gam3$Canopy.Class <- recode(test.gam3$Canopy.Class, "'C' = 'Canopy'; 'D'='Canopy'")
# summary(test.gam3)
# Subsetting out just the FAGR (Gillbrook) and TSCA (Pisgah) for some site level runs
gb.fagr <- test[test$Site.Code %in%"GB" & test$Species %in% "FAGR",]
ps.tsca <- test[test$Site.Code %in%"PS" & test$Species %in% "TSCA",]
# Found a QURU from Lyford that was an outlier.  Understory tree that was 58cm DBH; Pulling that tree
test <- test[!test$TreeID %in% "LF2029",]
summary(test)
summary(test[test$Year==2014])
summary(test[test$Year==2014,])
# SKIP TO LINE 36 FOR DATA INPUT.
library(mgcv)
library(ggplot2)
library(car)
# Christy's GAMM code
# gam1 <- gamm(Y ~  s(Biomass, bs="cr", k=3, by=PFT) + s(tair, k=k, by=PFT) + s(precipf, k=k, by=PFT) + s(CO2, k=k, by=PFT), random=list(PlotID=~1), data=data)
# Loading in my data
# ne.data <- read.csv("processed_data/NESites_tree_plus_climate_and_BA.csv", header=T)
# ne.data$Live.Dead <- recode(ne.data$Live.Dead, "'Li'='LIVE'")
# summary(ne.data)
# ne.data2 <- ne.data[,c("Year", "Site.Code", "TreeID", "RW", "Species", "Canopy.Class", "Live.Dead", "DBH", "dbh.recon", "tmean", "precip", "BA", "BA.inc", "Plot")]
# names(ne.data2) <- c("Year", "Site.Code", "TreeID", "RW", "Species", "Canopy.Class", "Live.Dead", "DBH", "dbh.recon", "tmean", "precip", "BA", "BA.inc", "PlotID")
#
# phd.data <- read.csv("processed_data/AllSites_tree_plus_climate_and_BA.csv", header=T)
# summary(phd.data)
#
# ne.phd.data <- phd.data[phd.data$Site %in% c("Howland", "Harvard"),]
# ne.phd.data$DBH <- ne.phd.data$DBH..cm.
# ne.phd.data$Canopy.Class <- recode(ne.phd.data$Canopy.Class, "'S' = 'U'")
# ne.phd.data$Site.Code <- recode(ne.phd.data$Site, "'Howland'='HO';'Harvard'='HF'")
#
# ne.phd.data2 <- ne.phd.data[,c("Year", "Site.Code", "TreeID", "RW", "Species", "Canopy.Class", "Live.Dead", "DBH", "dbh.recon", "tmean", "precip", "BA", "BA.inc", "PlotID")]
#
# names(ne.data2)
# names(ne.phd.data2)
#
# data.use <- rbind(ne.data2, ne.phd.data2)
# summary(data.use)
# save(data.use, file="processed_data/gam_input_dataset.Rdata")
# Removing the huge BA.inc value tree.  I'm not sure what is happening there.  Ask Christy to take a look
# data.use <- data.use[!data.use$BA.inc > 140,]
# Loading in data.use
# Was merged in script #7 to facilitate VPD data
data.use <- read.csv("processed_data/NESites_tree_plus_climate_and_BA.csv", header=T)
# CR 4 Feb 2018 -- Rather than remove this value, lets just make it NA
# data.use[data.use$BA.inc > 140 & !is.na(data.use$BA.inc),]
data.use[!is.na(data.use$BA.inc) & data.use$BA.inc > 140, "BA.inc"] <- NA
summary(data.use)
# data.use$group <- data.use$Species
# data.use$group <- recode(data.use$group, "'CAOV' = 'CARYA'; 'CACO' = 'CARYA';
#                          'CATE' = 'CARYA'; 'ACSAC' = 'ACSA'; 'BEAL' = 'BETULA'; 'BELE' = 'BETULA'; 'QUMU' = 'QUAL'")
#
# data.use$group.plot <- as.factor(paste(data.use$group, data.use$PlotID, sep="."))
# data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'D'")
data.use$Canopy.Class <- recode(data.use$Canopy.Class, "'C' = 'Canopy'; 'D'='Canopy'")
# summary(data.use)
# trimming down the data used to be only living trees, and not any goofs or snags
data.use <- data.use[data.use$Live.Dead=="LIVE" & !is.na(data.use$Live.Dead) & !data.use$Canopy.Class=="F" & !is.na(data.use$Canopy.Class),]
summary(data.use)
# reducing the amount of data for the test runs
# sites.use <- c("Harvard", "Howland", "Morgan Monroe State Park", "Oak Openings Toledo", "Missouri Ozark")
# test <- data.use[data.use$Site %in% sites.use & !is.na(data.use$RW) & !is.na(data.use$BA.inc),]
test <- data.use[!is.na(data.use$RW) & !is.na(data.use$BA.inc),]
summary(test)
test$spp.cc <- as.factor(paste(test$Species, test$Canopy.Class, sep="."))
test$spp.plot <- as.factor(paste(test$Species, test$PlotID, sep="."))
summary(test)
# Get a list of what predictors & responses I'm using
predictors.all <- c("vpd.min", "vpd.max", "tmean", "precip", "Species", "dbh.recon", "Canopy.Class", "spp.plot", "Site.Code", "Year", "PlotID", "spp.cc")
# Getting rid of observations that have NAs in the important variables
test <- test[complete.cases(test[,predictors.all]),]
# test <- test[test$Live.Dead=="LIVE" & !test$Canopy.Class=="F",]
summary(test)
# Subsetting to a set of species that we have enough data to feel good about
#species.use <- c("TSCA", "QURU", "ACRU", "BEAL", "ACSA", "LITU", "QUAL", "CAOV", "CACO", "CATE", "JUVI", "QUVE", "PCRU", "THOC", "PIST")
# spp.use <- c("ACRU", "ACSA", "BETULA", "CARYA", "FAGR", "FRAX", "PIST", "QUAL", "QURU", "QUVE", "SAAL", "TSCA", "ULRU", "PCRU", "THOC", "LITU", "JUVI")
# Looking at select major species for these sites
spp.use <- c("TSCA", "ACRU", "QURU", "FAGR")
test <- test[test$Species %in% spp.use,]
summary(test)
# par(new=F)
# plot(test[test$TreeID=="MMA003", "BA.inc"]~ test[test$TreeID=="MMA003","Year"], type="l")
test$log.dbh <- log(test$dbh.recon)
summary(test)
summary(test)
summary(test$Live.Dead)
summary(test$Canopy.Class)
# RW <- test$RW
# temp <- test$tmean
# precip <- test$precip
# canopy <- test$Canopy.Class
# size <- test$DBH..cm.
# species <- unique(test$Species)
# library(ggplot2)
# ggplot(data=test) +
# facet_wrap(~PlotID) +
# geom_histogram(aes(x=dbh.recon))
# ggplot(data=test) +
# facet_wrap(~Species) +
# geom_histogram(aes(x=dbh.recon))
# hist(test$dbh.recon)
# test2 <- test[test$group %in% c("QURU", "ACRU") & test$Year>=1980,]
# test2 <- test[test$group %in% c("QURU", "ACRU"),]
# test2 <- test[test$Site %in% c("Morgan Monroe State Park", "Harvard"), ]
# test2$log.dbh <- log(test2$dbh.recon)
# summary(test2)
summary(test)
test[test$BA.inc==0, "BA.inc"] <- 1e-6
save(test, file="overstory_understory_combined_data_use.Rdata")
# test.gam3 <- test
# test.gam3$Canopy.Class <- recode(test.gam3$Canopy.Class, "'C' = 'Canopy'; 'D'='Canopy'")
# summary(test.gam3)
# Subsetting out just the FAGR (Gillbrook) and TSCA (Pisgah) for some site level runs
gb.fagr <- test[test$Site.Code %in%"GB" & test$Species %in% "FAGR",]
ps.tsca <- test[test$Site.Code %in%"PS" & test$Species %in% "TSCA",]
# Found a QURU from Lyford that was an outlier.  Understory tree that was 58cm DBH; Pulling that tree
test <- test[!test$TreeID %in% "LF2029",]
summary(test)
